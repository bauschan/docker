version: '3.5'

# For this configuration to work properly, you must have a license file mounted into the dotcms
# service.  Without a license file, the external ES service will NOT be recognized and utilized.
# If started without a valid license file, all documents will indexed on the dotcms node directly
# and will have to be reindexed after a valid license is applied.

networks:
  http_net:
  db_net:
  es_net:
  hz_net:

volumes:
  cms-shared:
  dbdata:
  esdata:

services:

# http service provides reverse proxy to Tomcat service via HAProxy
  http:
    image: dotcms/haproxy:1.8-alpha
    environment:
      "HAPROXY_CERT_PATH": '/certs/'
#     How to redirect all http traffic to https - must have SSL support enabled
#      "HAPROXY_REDIRECT_HTTPS_ALL": 'true'
#     How to set the maintenance page that will display for 503 responses
#      "HAPROXY_MAINTENANCE_PAGE": '/srv/config/503.http'
    ports:
      - "80:80"
#     Uncomment following line for SSL support - should also mount certs into volume below
#      - "443:443"
#    volumes:
#     How to mount certificates into the image
#      - /data/dotcms/haproxy/certs:/certs:ro
#     How to mount custom error pages into the image
#      - /data/dotcms/haproxy/503.http:/srv/config/503.http:ro

    networks:
      - http_net

# hazelcast service provides communication mechanism for caching invalidations
#     future implementains will also allow for external caching of objects
  hazelcast:
    image: dotcms/hazelcast:3.9.2-alpha
    environment:
      "PROVIDER_HAZELCAST_DNSNAMES": 'hazelcast'
      "PROVIDER_HAZELCAST_HEAP_MIN": '128m'
      "PROVIDER_HAZELCAST_HEAP_MAX": '512m'
#     Uncomment following two lines if you are using mancenter application
#      "PROVIDER_HAZELCAST_MANCENTER_ENABLED": 'true'
#      "PROVIDER_HAZELCAST_MANCENTER_URL": 'http://hazelcast-mancenter:8080/mancenter'
    networks:
      - hz_net

#  hazelcast-mancenter is an optional component that can be used for insight into hazelcast
#      for more details, please refer to https://hazelcast.com/products/management-center/
#      if you wish to use mancenter for more than two hazelcast nodes, please contact
#      Hazelcast for licensing details
#  hazelcast-mancenter:
#    image: dotcms/hazelcast-mancenter:3.9.2-alpha
#    ports:
#      - "8080:8080"
#    networks:
#      - hz_net

# elasticsearch-persistent service provides an external ElasticSearch node that persists
#     the index outside of the ephemeral container.  Please note for this ES node to be used,
#     you must have a valid dotCMS license applied to your server.
# Also for this container to startup, vm.max_map_count must be configured on the host node as
#     indicated here:
#       https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html#docker-cli-run-prod-mode
  elasticsearch-persistent:
    image: dotcms/elasticsearch:6.1.3-alpha
    ports:
      - "9200:9200"
    environment:
      "PROVIDER_ELASTICSEARCH_HEAP_SIZE": '1500m'
      "PROVIDER_ELASTICSEARCH_DNSNAMES": 'elasticsearch-persistent,elasticsearch'
      "PROVIDER_ELASTICSEARCH_SVC_DELAY_MIN": '1'
      "PROVIDER_ELASTICSEARCH_SVC_DELAY_STEP": '1'
      "PROVIDER_ELASTICSEARCH_SVC_DELAY_MAX": '2'
    volumes:
      - esdata:/data
    networks:
      - es_net

# elasticsearch service provides an external ElasticSearch ephemeral node.  It does not need to
#     persist the index outside of the ephemeral container because this is handled by the
#     elasticsearch-persistent service.  Please note for this ES node to be used, you must have
#     a valid dotCMS license applied to your server.
# Also for this container to startup, vm.max_map_count must be configured on the host node as
#     indicated here:
#       https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html#docker-cli-run-prod-mode
  elasticsearch:
    image: dotcms/elasticsearch:6.1.3-alpha
    depends_on:
      - elasticsearch-persistent
    environment:
      "PROVIDER_ELASTICSEARCH_HEAP_SIZE": '1024m'
      "PROVIDER_ELASTICSEARCH_DNSNAMES": 'elasticsearch-persistent,elasticsearch'
      "PROVIDER_ELASTICSEARCH_SVC_DELAY_MIN": '3'
      "PROVIDER_ELASTICSEARCH_SVC_DELAY_MAX": '30'
    networks:
      - es_net
    deploy:
      replicas: 1

# dotcms service provides all of the content management functionality.  Initial startups and
#     restarts for upgrading must have a replica of one.  Once the Database is the current version,
#     then multiple replicas can be started.  Make sure not to exceed the number of available
#     licenses!
# For a dotCMS cluster to startup properly, you must have licenses correctly applied.
#     See volumes section below.
  dotcms:
    image: dotcms/dotcms:5.0.2-alpha
    environment:
      "CMS_HEAP_SIZE": '2g'
      "CMS_JAVA_OPTS": '-XX:+PrintFlagsFinal'
      "PROVIDER_DB_DNSNAME": 'db'
      "PROVIDER_ELASTICSEARCH_DNSNAMES": 'elasticsearch-persistent, elasticsearch'
      "PROVIDER_HAZELCAST_DNSNAMES": 'hazelcast'
    depends_on:
      - elasticsearch-persistent
      - hazelcast
      - db
      - http
    volumes:
      - cms-shared:/data/shared
      #- [serverpath]/license.dat:/data/local/dotsecure/license/license.dat
      #- [serverpath]/license.zip:/data/shared/assets/license.zip
    networks:
      - db_net
      - http_net
      - es_net
      - hz_net
    deploy:
      replicas: 1

# db service provides database persistence for dotCMS data.
  db:
    image: dotcms/postgres:9.6-alpha
    volumes:
      - dbdata:/data/pg
    networks:
      - db_net
